# -*- coding: utf-8 -*-
"""Company Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DX9-3B1YD8GKheQx0pw0HaCTU9CAguPh

##***import Data***
"""

from google.colab import drive
drive.mount('/content/drive')

zip_file_path = "/content/drive/MyDrive/Receipts_repository.zip"

!cp "{zip_file_path}" /content/

# Commented out IPython magic to ensure Python compatibility.
# %cd /content

!unzip Receipts_repository.zip

import os
print(len(os.listdir("/content/r_0.0")))
print(len(os.listdir("/content/r_0.1")))
print(len(os.listdir("/content/r_0.2")))
print(len(os.listdir("/content/r_0.3")))
print(len(os.listdir("/content/r_0.4")))
print(len(os.listdir("/content/r_0.5")))
print(len(os.listdir("/content/r_0.6")))
print(len(os.listdir("/content/r_0.7")))
print(len(os.listdir("/content/r_0.8")))
print(len(os.listdir("/content/r_0.9")))
print(len(os.listdir("/content/r_1.0")))
print(len(os.listdir("/content/r_1.1")))
print(len(os.listdir("/content/r_1.2")))
print(len(os.listdir("/content/r_1.3")))
print(len(os.listdir("/content/r_1.4")))
print(len(os.listdir("/content/r_1.5")))
print(len(os.listdir("/content/r_1.6")))
print(len(os.listdir("/content/r_1.7")))
print(len(os.listdir("/content/r_1.8")))
print(len(os.listdir("/content/r_1.9")))
print(len(os.listdir("/content/r_2.0")))

"""##**Data processing**"""

import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
import matplotlib.image as mgimg
import PIL.Image
import cv2 as cv

img=mgimg.imread("/content/r_1.5/05-0.jpeg")
plt.imshow(img)
plt.show()

"""###***Resize_Image***"""

os.mkdir("Resize_image")

os.mkdir("Resize_image/rsize_0")

os.mkdir("Resize_image/rsize_1")
os.mkdir("Resize_image/rsize_2")
os.mkdir("Resize_image/rsize_3")
os.mkdir("Resize_image/rsize_4")

os.mkdir("Resize_image/rsize_5")
os.mkdir("Resize_image/rsize_6")
os.mkdir("Resize_image/rsize_7")
os.mkdir("Resize_image/rsize_8")

os.mkdir("Resize_image/rsize_9")
os.mkdir("Resize_image/rsize_10")
os.mkdir("Resize_image/rsize_11")
os.mkdir("Resize_image/rsize_12")

os.mkdir("Resize_image/rsize_13")
os.mkdir("Resize_image/rsize_14")
os.mkdir("Resize_image/rsize_15")
os.mkdir("Resize_image/rsize_16")

os.mkdir("Resize_image/rsize_17")
os.mkdir("Resize_image/rsize_18")
os.mkdir("Resize_image/rsize_19")
os.mkdir("Resize_image/rsize_20")

original_folder = '/content/r_0.0/'
resized_folder = '/content/Resize_image/rsize_0/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.1/'
resized_folder = '/content/Resize_image/rsize_1/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.2/'
resized_folder = '/content/Resize_image/rsize_2/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.3/'
resized_folder = '/content/Resize_image/rsize_3/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.4/'
resized_folder = '/content/Resize_image/rsize_4/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.5/'
resized_folder = '/content/Resize_image/rsize_5/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.6/'
resized_folder = '/content/Resize_image/rsize_6/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.7/'
resized_folder = '/content/Resize_image/rsize_7/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.8/'
resized_folder = '/content/Resize_image/rsize_8/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_0.9/'
resized_folder = '/content/Resize_image/rsize_9/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.0/'
resized_folder = '/content/Resize_image/rsize_10/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.1/'
resized_folder = '/content/Resize_image/rsize_11/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.2/'
resized_folder = '/content/Resize_image/rsize_12/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.3/'
resized_folder = '/content/Resize_image/rsize_13/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.4/'
resized_folder = '/content/Resize_image/rsize_14/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.5/'
resized_folder = '/content/Resize_image/rsize_15/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.6/'
resized_folder = '/content/Resize_image/rsize_16/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.7/'
resized_folder = '/content/Resize_image/rsize_17/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.8/'
resized_folder = '/content/Resize_image/rsize_18/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_1.9/'
resized_folder = '/content/Resize_image/rsize_19/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

original_folder = '/content/r_2.0/'
resized_folder = '/content/Resize_image/rsize_20/'

for i in range(703):

  filename = os.listdir(original_folder)[i]
  img_path = original_folder+filename

  img = PIL.Image.open(img_path)
  img = img.resize((224, 224))
  img = img.convert('RGB')

  newImgPath = resized_folder+filename
  img.save(newImgPath)

image=mgimg.imread("/content/Resize_image/rsize_10/05-104.jpeg")
plt.imshow(image)
plt.show()

label=[]
import os
for i in os.listdir("/content/Resize_image/rsize_0"):
  label.append(0.0)

for i in os.listdir("/content/Resize_image/rsize_1"):
  label.append(0.1)

for i in os.listdir("/content/Resize_image/rsize_2"):
  label.append(0.2)

for i in os.listdir("/content/Resize_image/rsize_3"):
  label.append(0.3)

for i in os.listdir("/content/Resize_image/rsize_4"):
  label.append(0.4)

for i in os.listdir("/content/Resize_image/rsize_5"):
  label.append(0.5)

for i in os.listdir("/content/Resize_image/rsize_6"):
  label.append(0.6)

for i in os.listdir("/content/Resize_image/rsize_7"):
  label.append(0.7)

for i in os.listdir("/content/Resize_image/rsize_8"):
  label.append(0.8)

for i in os.listdir("/content/Resize_image/rsize_9"):
  label.append(0.9)

for i in os.listdir("/content/Resize_image/rsize_10"):
  label.append(1.0)

for i in os.listdir("/content/Resize_image/rsize_11"):
  label.append(1.1)

for i in os.listdir("/content/Resize_image/rsize_12"):
  label.append(1.2)

for i in os.listdir("/content/Resize_image/rsize_13"):
  label.append(1.3)

for i in os.listdir("/content/Resize_image/rsize_14"):
  label.append(1.4)

for i in os.listdir("/content/Resize_image/rsize_15"):
  label.append(1.5)

for i in os.listdir("/content/Resize_image/rsize_16"):
  label.append(1.6)

for i in os.listdir("/content/Resize_image/rsize_17"):
  label.append(1.7)

for i in os.listdir("/content/Resize_image/rsize_18"):
  label.append(1.8)

for i in os.listdir("/content/Resize_image/rsize_19"):
  label.append(1.9)

for i in os.listdir("/content/Resize_image/rsize_20"):
  label.append(2.0)

len(label)

703*21

import numpy as np
np.unique(label,return_counts=True)

import cv2 as cv
import glob
image_directory = '/content/Resize_image/rsize_0/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_0 = np.asarray([cv.imread(file) for file in files])
print(type(pix_0))

file_path = 'array_data0.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_0)

import glob
image_directory = '/content/Resize_image/rsize_1/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_1 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data1.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_1)

import glob
image_directory = '/content/Resize_image/rsize_2/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_2 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data2.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_2)

import glob
image_directory = '/content/Resize_image/rsize_3/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_3 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data3.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_3)

import glob
image_directory = '/content/Resize_image/rsize_4/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_4 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data4.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_4)

import glob
image_directory = '/content/Resize_image/rsize_5/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_5 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data5.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_5)

import glob
image_directory = '/content/Resize_image/rsize_6/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_6 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data6.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_6)

import glob
image_directory = '/content/Resize_image/rsize_7/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_7 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data7.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_7)

import glob
image_directory = '/content/Resize_image/rsize_8/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_8 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data8.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_8)

import glob
image_directory = '/content/Resize_image/rsize_9/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_9 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data9.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_9)

import glob
image_directory = '/content/Resize_image/rsize_10/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_10 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data10.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_10)

import glob
image_directory = '/content/Resize_image/rsize_11/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_11 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data11.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_11)

import glob
image_directory = '/content/Resize_image/rsize_12/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_12 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data12.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_12)

import glob
image_directory = '/content/Resize_image/rsize_13/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_13 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data13.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_13)

import glob
image_directory = '/content/Resize_image/rsize_14/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_14 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data14.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_14)

import glob
image_directory = '/content/Resize_image/rsize_15/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_15 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data15.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_15)

import glob
image_directory = '/content/Resize_image/rsize_16/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_16 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data16.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_16)

import glob
image_directory = '/content/Resize_image/rsize_17/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_17 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data17.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_17)

import glob
image_directory = '/content/Resize_image/rsize_18/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_18 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data18.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_18)

import glob
image_directory = '/content/Resize_image/rsize_19/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_19 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data19.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_19)

import glob
image_directory = '/content/Resize_image/rsize_20/'
image_extension = ['png', 'jpg','jpeg']

files = []

[files.extend(glob.glob(image_directory + '*.' + e)) for e in image_extension]

pix_20 = np.asarray([cv.imread(file) for file in files])

file_path = 'array_data20.npy'

# Save the NumPy array to the specified file
np.save(file_path, pix_20)

pix_20.shape

label=np.asarray(label)

result_array = []
result_array.extend(pix_0)
result_array.extend(pix_1)
result_array.extend(pix_2)
result_array.extend(pix_3)
result_array.extend(pix_4)
result_array.extend(pix_5)
result_array.extend(pix_6)

result_array.extend(pix_7)
result_array.extend(pix_8)
result_array.extend(pix_9)
result_array.extend(pix_10)
result_array.extend(pix_11)
result_array.extend(pix_12)
result_array.extend(pix_13)
result_array.extend(pix_14)
result_array.extend(pix_15)
result_array.extend(pix_16)
result_array.extend(pix_17)

result_array.extend(pix_18)
result_array.extend(pix_19)
result_array.extend(pix_20)

result_array=np.asarray(result_array)

result_array.shape

result_array[:5000]=result_array[:5000]/255

result_array[5000:10000]=result_array[5000:10000]/255

result_array[10000:14764]=result_array[10000:14764]/255

file_path = 'result_array.npy'

# Save the NumPy array to the specified file
np.save(file_path, result_array)

from google.colab import files

# Specify the file path of the file you want to download
file_path = '/content/result_array.npy'  # Change this to your file's path

# Download the file
files.download(file_path)



"""##***Train_Test_Split***"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(result_array,label,test_size=0.2,random_state=42)

x_train.shape

x_test.shape

np.max(x_train)

y_train.shape

np.unique(y_train,return_counts=True)

"""##***NN***"""

from tensorflow import keras

model=keras.models.Sequential()
model.add(keras.layers.Flatten(input_shape=(224,224,3)))
model.add(keras.layers.Dense(300,activation='relu'))
model.add(keras.layers.Dense(100,activation='relu'))
model.add(keras.layers.Dense(50,activation='relu'))
model.add(keras.layers.Dense(21,activation='softmax'))
model.summary()

model.compile(optimizer="Adam",loss="sparse_categorical_crossentropy",metrics = ['acc'])

model.fit(x_train,y_train,epochs=10)

"""##**CNN_Model**"""

from tensorflow import keras

model_CNN = keras.Sequential()

model_CNN.add(keras.layers.Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(224, 224, 3)))
model_CNN.add(keras.layers.BatchNormalization())
model_CNN.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))

model_CNN.add(keras.layers.Conv2D(64, kernel_size=(3, 3), activation='relu'))
model_CNN.add(keras.layers.BatchNormalization())
model_CNN.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))

model_CNN.add(keras.layers.Conv2D(128, kernel_size=(3, 3), activation='relu'))
model_CNN.add(keras.layers.BatchNormalization())
model_CNN.add(keras.layers.MaxPooling2D(pool_size=(2, 2)))

model_CNN.add(keras.layers.Flatten())

model_CNN.add(keras.layers.Dense(128, activation='relu'))
model_CNN.add(keras.layers.Dropout(0.5))

model_CNN.add(keras.layers.Dense(21, activation='softmax'))

# Learning Rate Scheduler
lr_schedule = keras.optimizers.schedules.ExponentialDecay(initial_learning_rate=1e-3, decay_steps=10000, decay_rate=0.9)
optimizer = keras.optimizers.Adam(learning_rate=lr_schedule)

model_CNN.summary()

model_CNN.compile(optimizer=optimizer, loss="sparse_categorical_crossentropy", metrics=['acc'])

data_augmentation = keras.Sequential([
    keras.layers.experimental.preprocessing.RandomFlip("horizontal"),
    keras.layers.experimental.preprocessing.RandomRotation(0.1),
    keras.layers.experimental.preprocessing.RandomZoom(0.1),
])

augmented_x_train = data_augmentation(x_train)

model_CNN.fit(x_train, y_train, epochs=10, batch_size=32, validation_split=0.2)

"""##***Transfar_Laerning***"""

import tensorflow_hub as hub
from tensorflow import keras

mobilenet_model = 'https://tfhub.dev/google/tf2-preview/mobilenet_v2/feature_vector/4'

pretrained_model = hub.KerasLayer(mobilenet_model, input_shape=(224,224,3), trainable=False)

num_of_classes =21

model = keras.Sequential([

    pretrained_model,
    keras.layers.Dense(num_of_classes)

])

model.summary()

model.compile(
    optimizer = 'adam',
    loss = keras.losses.SparseCategoricalCrossentropy(from_logits=True),
    metrics = ['acc']
)

model.fit(x_train, y_train, epochs=5)

from tensorflow.keras.applications.vgg16 import VGG16
## Loading VGG16 model
base_model = VGG16(weights="imagenet", include_top=False,input_shape=(224,224,3))
base_model.trainable = False ## Not trainable weights
base_model.summary()

num_of_classes = 21
import tensorflow as tf
model_VGG = tf.keras.Sequential([
    base_model,
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(num_of_classes, activation='relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(1, activation='sigmoid')  # Using sigmoid activation for binary classification
])

model_VGG.compile(
    optimizer='adam',
    loss='binary_crossentropy',  # Using binary cross-entropy for binary classification
    metrics=['accuracy']  # 'acc' has been changed to 'accuracy'
)

model_VGG.fit(x_train, y_train, epochs=5)